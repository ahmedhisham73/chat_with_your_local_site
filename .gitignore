<<<<<<< HEAD
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
=======
# ===== Python Bytecode & Cache =====
__pycache__/
*.py[cod]
*$py.class
*.so
.pytype/
.pyre/
.dmypy.json
.dmypy.json
.mypy_cache/
.ruff_cache/
.ipynb_checkpoints
.pytest_cache/
.hypothesis/
>>>>>>> 9af843417c8fc5612eb1b8c82af4e1fde438de7e
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
<<<<<<< HEAD
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
=======

# ===== Python Env & Tooling =====
.env
.env.*
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.pdm.toml
.pdm-python
.pdm-build/
.pip
.pypirc
.python-version
.Python

# ===== Poetry / Pipenv / PDM / UV =====
# Pipfile.lock
# poetry.lock
# uv.lock
# pdm.lock

# ===== PyInstaller / PyBuilder =====
*.spec
.pybuilder/
target/

# ===== Django & Flask =====
>>>>>>> 9af843417c8fc5612eb1b8c82af4e1fde438de7e
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
<<<<<<< HEAD

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc
=======
instance/
.webassets-cache

# ===== Build / Dist / Wheels =====
build/
dist/
downloads/
.eggs/
*.egg-info/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
.installed.cfg
*.egg
MANIFEST

# ===== Sphinx / MkDocs Docs =====
docs/_build/
site/

# ===== Jupyter =====
.ipynb_checkpoints

# ===== Celery / Sage / Cython =====
celerybeat-schedule
celerybeat.pid
*.sage.py
cython_debug/

# ===== Editor-specific =====
.idea/
.vscode/
.spyderproject
.spyproject
.ropeproject

# ===== Ruff / Pytype / Static Analyzers =====
.ruff_cache/
.pytype/
.pyre/

# ===== Logs / Temp =====
*.log
*.zip
*.tmp
*.bak

# ===== Certificates (do not push to repo) =====
certs/

# ===== Ignore model files & folders =====
models/
**/models/
**/*.gguf
**/*.pth
**/*.pt

# ===== Docker volume (local user DB) =====
**/data/users/users.yaml

# ===== Node =====
node_modules/
**/node_modules/

# ===== Frontend cache =====
frontend/frontend/.vite

>>>>>>> 9af843417c8fc5612eb1b8c82af4e1fde438de7e
